@use "sass:meta";
@use "../utility/get" as *;
@use "script-direction" as *;

/// Normalize with configurable variables
/// @param {Map} $styles [()] Default styles for some elements
/// @group helper

@mixin normalize($styles: ()) {

  // microsoft viewport
  @-ms-viewport {
    width: devide-width;
  }

  // normalize box model for elements
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  // root settings
  html {
    // prevent ios and windows phone text size changes on orientation change
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;

    // optimize font display
    -webkit-font-smoothing: antialiased;
    -moz-font-smoothing: greyscale;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;

    // prevent webkit tap highlight inconsistency
    -webkit-tap-highlight-color: transparent;

    // prevent scrollbar issues in ie and edge
    -ms-overflow-style: scrollbar;

    // standardize browser behaviour
    scroll-behavior: smooth;
    tab-size: 4;

    // set standardized defaults
    box-sizing: get($styles, box-sizing, border-box);
  }

  // accessibility overrides
  @media (prefers-reduced-motion: reduce) {

    html {
      scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
      animation-duration: 0s !important;
		  transition-duration: 0s !important;
    }
  }

  // ensure the body covers the height of the window
  body {
    min-height: get($styles, min-height, 100vh);
  }

  // reset margin and padding for common layout elements
  body,
  div,
  form,
  th,
  td,
  figure {
    margin: 0;
    padding: 0;
  }

  // html5 display for block elements
  address,
  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  main,
  nav,
  pre,
  section,
  summary {
    display: block;
  }

  // display for output elements
  output {
    display: inline-block;
  }

  // vertical alignments
  audio,
  canvas,
  img,
  progress,
  video,
  iframe {
    vertical-align: get($styles, vertical-align, middle);

    // fix html5 display settings for inline elements
    display: inline-block;
    max-width: 100%;
  }

  // fix display issues for summaries
  summary {
    display: list-item;
    cursor: pointer;
  }

  // natively hidden elements
  [hidden],
  template {
    display: none;
  }

  // remove outline for elements that are focusable programatically only
  [tabindex="-1"]:focus {
    outline: none !important;
  }

  // touch action
  a,
  area,
  button,
  input,
  label,
  select,
  summary,
  textarea {
    touch-action: manipulation;
  }

  // prevent display of audio with no control
  audio:not([controls]) {
    display: none;
    height: 0;
  }

  // prevent overflow for svg in ie
  svg:not(:root) {
    overflow: hidden;
  }

  // bold elements
  b,
  strong,
  dt {
    font-weight: get($styles, bold font-weight, 700);
  }

  // italic elements
  em,
  dfn,
  var {
    line-height:inherit;
    font-style: italic;
  }

  // underline elements
  ins,
  u  {
    text-decoration:underline;
  }

  // line-through elements
  del,
  s {
    text-decoration: line-through;
  }

  // small
  small {
    font-size: get($styles, small font-size, 80%);
  }

  // subscript
  sub {
    position: relative;
    bottom: -0.25em;
    vertical-align: baseline;
    line-height: 0;
    font-size: 75%;
  }

  // superscript
  sup {
    position: relative;
    top: -0.5em;
    vertical-align: baseline;
    line-height: 0;
    font-size: 75%;
  }

  // code elements
  code,
  kbd,
  pre,
  samp {
    font-size: get($styles, code font-size, 1em);
    font-family: get($styles, code font-family, (consolas, monospace, monospace));
  }

  // standardize cursor behaviour for help elements
  abbr[title],
  dfn[title] {
    cursor: help;
  }

  // abbr with title
  abbr[title] {
    border-bottom: none;
    text-decoration: underline dotted;
  }

  // indent
  blockquote,
  q,
  ul,
  ol,
  dt {
    padding-#{script-direction()}: if(meta.variable-exists(gap), $gap, 1.5em);
  }

  // blockquote and quote
  blockquote,
  q {
    quotes: none
  }

  // horizontal ruler
  hr {
    // add the correct box sizing in Firefox
    box-sizing: content-box;
    height: 0;

    // show the overflow in Edge and IE
    overflow: visible;

    // reset border
    border: 0;

    border-top: get($styles, hr, rgba(#000, 0.1));
  }

  // image element
  img {
    // prevent unexpected behaviour
    height: auto;
    vertical-align: middle;

    // set microsoft interpolation
    -ms-interpolation-mode: bicubic;

    // remove the border on images inside links in IE10
    &,
    a & {
      border-style: none;
    }
  }

  // h1
  h1 {
    font-size: get($styles, h1 font-size, 2em);
  }

  // link
  a {
    background: transparent;

    // fix underline issues in webkit
    -webkit-text-decoration-skip: objects;

    // improve readability for focus and hovered anchors
    &:active,
    &:hover {
      outline: 0;
    }
  }

  // dialog
  dialog {
    position: absolute;
    right: 0;
    left: 0;
    display: block;
    width: fit-content;
    height: fit-content;
    padding: 1em;
    border: solid;

    &:not([open]) {
      display: none;
    }
  }

  // normalize fieldset styles in all browsers
  fieldset {
    min-height: 0;
    margin: 0 2px;
    padding: get($styles, fieldset padding, 0.35em 0.624em 0.75em);
    border: get($styles, fieldset border, 1px solid rgba(#000, 0.5));
  }

  // prevent inheritance and text wrapping issues
  legend {
    box-sizing: get($styles, box-sizing, border-box);
    display: table;
    max-width: 100%;
    padding: 0;
    border: 0;
    white-space: normal;
    color: inherit;
  }

  // prevent optgroup from inheriting font-weight
  optgroup {
    font-weight: get($styles, bold font-weight, 700);
  }

  // prevent inheritance for certain elements
  address,
  button,
  input,
  optgroup,
  select,
  textarea {
    margin: 0;
    font: inherit;
    color: inherit;
  }

  // prevent inheritance of box sizing
  button,
  input,
  optgroup,
  option,
  select,
  textarea,
  summary {
    box-sizing: get($styles, box-sizing, border-box);
  }

  // show overflow in edge
  button,
  input {
    overflow: visible;
  }

  // remove the inheritance of text transform in firefox
  button,
  select {
    text-transform: none;
  }

  // prevent forced appearance for input elements on ios
  input[type="text"],
  input[type="email"],
  input[type="search"],
  input[type="password"] {
    -webkit-appearance: none;
    -moz-appearance: none;
  }

  // prevent cursor style for spinner
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  // correct appearance for date input
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    -webkit-appearance: listbox;
  }

  // minimum width to color input
  [type="color"] {
    min-width: 4em;
  }

  // prevent forced styling for upload button in webkit
  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit;
    vertical-align: baseline;
  }

  // multi-select
  select[multiple] {
    overflow-y: auto;
    padding: 0;
  }

  // remove the inner border and padding in firefox
  ::-moz-focus-inner {
    padding: 0;
    border-style: none;
  }

  // restore the focus styles unset previously
  :-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  // remove the additional invalid styles in Firefox
  :-moz-ui-invalid {
    box-shadow: none;
  }

  // webkit appearance for search inputs
  [type="search"] {
    -webkit-appearance: textfield;
    outline-offset: -2px;

    &::-webkit-search-cancel-button,
    &::-webkit-search-decoration {
      -webkit-appearance: none;
    }
  }

  // label
  label {
    display: get($styles, label display, inline-block);
  }

  // input
  input:not([type]),
  [type="color"],
  [type="date"],
  [type="datetime"],
  [type="datetime-local"],
  [type="email"],
  [type="image"],
  [type="month"],
  [type="number"],
  [type="password"],
  [type="search"],
  [type="tel"],
  [type="text"],
  [type="time"],
  [type="url"],
  [type="week"],
  select,
  textarea {
    display: get($styles, input display, inline-block);
    max-width: 100%;

    // prevent firefox issue with line-height
    line-height: normal;

    &:disabled {
      cursor: default
    }
  }

  // file input
  [type="file"] {
    display: get($styles, input display, inline-block);
    max-width: 100%;
    border: 0;
    background: transparent;
    cursor: pointer;

    // prevent firefox issue with line-height
    line-height: normal;

    // prevent padding issue appearing in some browsers
    padding-#{script-direction(backward)}: 0;
  }

  // textarea
  textarea {
    // remove scrollbar automatically added in ie and prevent horizontal resizing
    overflow: auto;
    resize: vertical;
  }

  // select
  select:not([multiple]) {
    // prevent padding issue appearing in some browsers
    padding-#{script-direction(backward)}: 0;
  }

  // standardize option in browsers
  select[multiple] option {
    padding: get($styles, input padding, 0.25em 0);
  }

  // clickable inputs
  [type="checkbox"],
  [type="radio"] {
    outline: get($styles, input outline);

    // prevent ie10 issues with clickable inputs
    padding: 0;
  }

  // button
  button,
  [type="button"],
  [type="reset"],
  [type="submit"],
  summary {
    max-width: 100%;
    text-transform: none;
    text-decoration: none;
    cursor: pointer;
    
    // remove auto-applied styles for clickables in ios
    -webkit-appearance: none;

    // make unselectable
    user-select: none;

    // set flags
    will-change: auto;

    // hide webkit tap highlight
    -webkit-tap-highlight-color: transparent;
    
    &:disabled {
      cursor: default
    }
  }

  button,
  [type="button"],
  [type="reset"],
  [type="submit"] {
    display: inline-block;
  }

  // ensure font inheritance for table elements
  table,
  th,
  td {
    font: inherit;
  }

  // caption
  caption {
    caption-side: get($styles, caption caption-side, bottom);
  }

  // table
  table {
    text-align: inherit;
    // prevent incompatibilties with border behaviour
    border-collapse: collapse;
    border-spacing: 0;
  }

  // table cell
  th,
  td {
    padding: get($styles, table-cell padding, 0);
  }

  // table head
  th,
  thead td {
    text-align: inherit;
  }

  // table foot
  tfoot th,
  tfoot td {
    text-align: inherit;
  }
}
