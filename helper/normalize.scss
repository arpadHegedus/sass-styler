@use "sass:map";
@use "../utility/declare-map" as *;
@use "../utility/get" as *;
@use "../utility/merge" as *;
@use "script-direction" as *;
@use "set-styles";
@use "spacing" as *;

/// The default normalize options
/// @group helper

$_defaults: (
  /* prevent ios and windows phone text size changes on orientation change */
  -ms-text-size-adjust: 100%,
  -webkit-text-size-adjust: 100%,
  /* optimize font display */
  -webkit-font-smoothing: antialiased,
  -moz-font-smoothing: greyscale,
  -moz-osx-font-smoothing: grayscale,
  text-rendering: optimizeSpeed,
  /* prevent webkit tap highlight inconsistency */
  -webkit-tap-highlight-color: transparent,
  /* prevent scrollbar issues in ie and edge */
  -ms-overflow-style: scrollbar,
  /* standardize browser behaviour */
  scroll-behavior: smooth,
  tab-size: 4,
  /* set standardized defaults */
  box-sizing: border-box,
  vertical-align: middle,
  /* bold elements */
  bold: (
    font-weight: 700
  ),
  /* italic elements */
  italic: (
    line-height: inherit,
    font-style: italic
  ),
  /* underline elements */
  underline: (
    text-decoration: underline
  ),
  /* line-through */
  line-through: (
    text-decoration: line-through
  ),
  /* small */
  small: (
    font-size: 80%
  ),
  /* subscript */
  sub: (
    position: relative,
    bottom: -0.25em,
    vertical-align: baseline,
    line-height: 0,
    font-size: 75%
  ),
  /* superscript */
  sup: (
    position: relative,
    top: -0.5em,
    vertical-align: baseline,
    line-height: 0,
    font-size: 75%
  ),
  /* code elements */
  code: (
    font-size: 1em,
    font-family: (consolas, monospace, monospace)
  ),
  /* pre */
  pre: (
    font-size: 1em,
    font-family: (consolas, monospace, monospace)
  ),
  /* abbr */
  abbr: (
    border-bottom: none,
    text-decoration: underline dotted
  ),
  /* quote */
  quote: (
    quotes: none
  ),
  /* horizontal ruler */
  hr: 1px solid rgba(0, 0, 0, 0.5),
  /* h1 */
  h1: (
    font-size: 2em
  ),
  /* link */
  link: (
    background: transparent
  ),
  /* dialog */
  dialog: (
    position: absolute,
    right: 0,
    left: 0,
    display: block,
    width: fit-content,
    height: fit-content,
    padding: 1em,
    border: solid
  ),
  /* normalize fieldset styles in all browsers */
  fieldset: (
    min-height: 0,
    margin: 0 2px,
    padding: 0.35em 0.624em 0.75em,
    border: 1px solid #000
  ),
  /* label */
  label: (
    display: inline-block
  ),
  /* prevent inheritance and text wrapping issues */
  legend: (
    box-sizing: border-box,
    display: table,
    max-width: 100%,
    padding: 0,
    border: 0,
    white-space: normal,
    color: inherit
  ),
  /* optgroup */
  optgroup: (
    /* prevent optgroup from inheriting font-weight */
    font-weight: 700
  ),
  /* input */
  input: (
    display: inline-block,
    max-width: 100%,
    disabled-readonly: (
      cursor: default
    ),
    /* prevent firefox issue with line-height */
    line-height: normal
  ),
  /* file input overwrites */
  file: (
    max-width: 100%,
    padding: 0,
    padding-right: null,
    padding-left: null,
    border: 0,
    background: transparent,
    cursor: pointer,
    hover: (
      background: null,
      border: null
    ),
    focus: (
      background: null,
      border: null
    ),
    hover-focus: (
      background: null,
      border: null
    ),
    active: (
      background: null,
      border: null
    ),
    disabled-readonly: (
      background: null,
      border: null
    )
  ),
  /* textarea */
  textarea: (
    /* remove scrollbar automatically added in ie and prevent horizontal resizing */
    overflow: auto,
    resize: vertical
  ),
  button: (
    display: inline-block,
    max-width: 100%,
    text-transform: none,
    text-decoration: none,
    cursor: pointer,
    disabled-readonly: (
      cursor: default
    ),
    /* remove auto-applied styles for clickables in ios */
    -webkit-appearance: none,
    /* make unselectable */
    user-select: none,
    /* set flags */
    will-change: auto,
    /* hide webkit tap highlight */
    -webkit-tap-highlight-color: transparent
  ),
  /* caption */
  caption: (
    caption-side: bottom
  ),
  /* table */
  table: (
    text-align: inherit,
    /* prevent incompatibilties with border behaviour */
    border-collapse: collapse,
    border-spacing: 0
  ),
  /* table cell */
  table-cell: (
    padding: 0
  ),
  /* table head */
  table-head: (
    text-align: inherit
  ),
  /* table foot */
  table-foot: (
    text-align: inherit
  )
);

/// Normalize with configurable variables
/// @group helper

@mixin normalize() {
  $settings: merge($_defaults, set-styles.$styles);

  /* stylelint-disable no-descending-specificity */

  /* microsoft viewport */
  @-ms-viewport {
    width: devide-width;
  }

  /* normalize box model for elements */
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  /* document root */
  html {
    @include declare-map(
      map.remove(
        $settings,
        height,
        hr,
        link,
        max-width,
        max-height,
        min-height,
        min-width,
        vertical-align,
        width
      )
    );
  }

  /* ensure the body covers the height of the window */
  body {
    min-height: 100vh;
  }

  /* reset margin and padding for common layout elements */
  body,
  div,
  form,
  th,
  td,
  figure {
    margin: 0;
    padding: 0;
  }

  /* html5 display for block elements */
  address,
  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  main,
  nav,
  section {
    display: block;
  }

  /* display for output elements */
  output {
    display: inline-block;
  }

  /* vertical alignments */
  audio,
  canvas,
  img,
  figure,
  progress,
  video,
  iframe {
    vertical-align: map.get($settings, vertical-align);

    /* fix html5 display settings for inline elements */
    display: inline-block;
    max-width: 100%;
  }

  /* fix display issues for summaries */
  summary {
    display: list-item;
    cursor: pointer;
  }

  /* natively hidden elements */
  [hidden],
  template {
    display: none;
  }

  /* remove outline for elements that are focusable programatically only */
  [tabindex="-1"]:focus {
    outline: none !important;
  }

  /* touch action */
  a,
  area,
  button,
  input,
  label,
  select,
  summary,
  textarea {
    touch-action: manipulation;
  }

  /* prevent display of audio with no control */
  audio:not([controls]) {
    display: none;
    height: 0;
  }

  /* prevent overflow for svg in ie */
  svg:not(:root) {
    overflow: hidden;
  }

  /* bold elements */
  b,
  strong,
  dt {
    @include declare-map(map.get($settings, bold));
  }

  /* italic elements */
  em,
  dfn,
  var {
    @include declare-map(map.get($settings, italic));
  }

  /* underline elements */
  ins,
  u  {
    @include declare-map(map.get($settings, underline));
  }

  /* line-through elements */
  del,
  s {
    @include declare-map(map.get($settings, line-through));
  }

  /* small */
  small {
    @include declare-map(map.get($settings, small));
  }

  /* subscript */
  sub {
    @include declare-map(map.get($settings, sub));
  }

  /* superscript */
  sup {
    @include declare-map(map.get($settings, sup));
  }

  /* code elements */
  code,
  kbd,
  samp {
    @include declare-map(map.get($settings, code));
  }

  /* pre */
  pre {
    @include declare-map(map.get($settings, pre));
  }

  /* mark */
  mark {
    @include declare-map(map.get($settings, mark));
  }

  /* standardize cursor behaviour for help elements */
  abbr[title],
  dfn[title] {
    cursor: help;
  }

  /* abbr with title */
  abbr[title] {
    @include declare-map(map.get($settings, abbr));
  }

  /* blockquote and quote */
  blockquote,
  q {
    @include declare-map(map.get($settings, quote));
  }

  /* cite */
  cite {
    @include declare-map(map.get($settings, cite));
  }

  /* horizontal ruler */
  hr {
    /* add the correct box sizing in Firefox */
    box-sizing: content-box;
    height: 0;

    /* show the overflow in Edge and IE */
    overflow: visible;

    /* reset border */
    border: 0;
    border-top: map.get($settings, hr);
  }

  /* image element */
  img {
    /* prevent unexpected behaviour */
    height: auto;
    vertical-align: middle;

    /* set microsoft interpolation */
    -ms-interpolation-mode: bicubic;

    /* remove the border on images inside links in IE10 */
    &,
    a & {
      border-style: none;
    }
  }

  /* headings */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @include declare-map(map.get($settings, heading));
  }

  /* h1 */
  h1 {
    @include declare-map(map.get($settings, h1));
  }

  /* h2 */
  h2 {
    @include declare-map(map.get($settings, h2));
  }

  /* h3 */
  h3 {
    @include declare-map(map.get($settings, h3));
  }

  /* h4 */
  h4 {
    @include declare-map(map.get($settings, h4));
  }

  /* h5 */
  h5 {
    @include declare-map(map.get($settings, h5));
  }

  /* h6 */
  h6 {
    @include declare-map(map.get($settings, h6));
  }

  /* link */
  a {
    /* fix underline issues in webkit */
    -webkit-text-decoration-skip: objects;

    /* improve readability for focus and hovered anchors */
    &:active,
    &:hover {
      outline: 0;
    }

    @include declare-map(map.get($settings, link));
  }

  /* dialog */
  dialog {
    @include declare-map(map.get($settings, dialog));

    &:not([open]) {
      display: none;
    }
  }

  /* fieldset */
  fieldset {
    @include declare-map(map.get($settings, fieldset));
  }

  /* legend */
  legend {
    @include declare-map(map.get($settings, legend));
  }

  /* optgroup */
  optgroup {
    @include declare-map(map.get($settings, optgroup));
  }

  /* prevent inheritance for certain elements */
  address,
  button,
  input,
  optgroup,
  select,
  textarea {
    margin: 0;
    font: inherit;
    color: inherit;
  }

  /* prevent inheritance of box sizing */
  button,
  input,
  optgroup,
  option,
  select,
  textarea,
  summary {
    box-sizing: map.get($settings, box-sizing);
  }

  /* show overflow in edge */
  button,
  input {
    overflow: visible;
  }

  /* remove the inheritance of text transform in firefox */
  button,
  select {
    text-transform: none;
  }

  /* prevent forced appearance for input elements on ios */
  input[type="text"],
  input[type="email"],
  input[type="search"],
  input[type="password"] {
    -webkit-appearance: none;
    -moz-appearance: none;
  }

  /* prevent cursor style for spinner */
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  /* correct appearance for date input */
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    -webkit-appearance: listbox;
  }

  /* minimum width to color input */
  [type="color"] {
    min-width: 4em;
  }

  /* prevent forced styling for upload button in webkit */
  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit;
    vertical-align: baseline;
  }

  /* multi-select */
  select[multiple] {
    overflow-y: auto;
    padding: 0;
  }

  /* remove the inner border and padding in firefox */
  ::-moz-focus-inner {
    padding: 0;
    border-style: none;
  }

  /* restore the focus styles unset previously */
  :-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  /* remove the additional invalid styles in Firefox */
  :-moz-ui-invalid {
    box-shadow: none;
  }

  /* webkit appearance for search inputs */
  [type="search"] {
    -webkit-appearance: textfield;
    outline-offset: -2px;

    &::-webkit-search-cancel-button,
    &::-webkit-search-decoration {
      -webkit-appearance: none;
    }
  }

  /* label */
  label {
    @include declare-map(map.get($settings, label));
  }

  /* input */
  input:not([type]),
  [type="color"],
  [type="date"],
  [type="datetime"],
  [type="datetime-local"],
  [type="email"],
  [type="image"],
  [type="month"],
  [type="number"],
  [type="password"],
  [type="search"],
  [type="tel"],
  [type="text"],
  [type="time"],
  [type="url"],
  [type="week"],
  select,
  textarea {
    @include declare-map(map.remove(map.get($settings, input), gap));
  }

  /* file input */
  [type="file"] {
    /* prevent padding issue appearing in some browsers */
    padding-#{script-direction(backward)}: 0;

    @include declare-map(merge(map.remove(map.get($settings, input), gap), map.get($settings, file)));
  }

  /* multiline inputs */
  textarea,
  select[multiple] {
    @include declare-map(map.get($settings, input-multiline));
  }

  /* textarea */
  textarea {
    @include declare-map(map.get($settings, textarea));
  }

  /* select */
  select:not([multiple]) {
    /* prevent padding issue appearing in some browsers */
    padding-#{script-direction(backward)}: 0;

    @include declare-map(map.get($settings, select));
  }

  /* standardize option in browsers */
  select[multiple] option {
    padding: if(get($settings, input padding), get($settings, input padding), 0.25em 0);
  }

  /* clickable inputs */
  [type="checkbox"],
  [type="radio"] {
    outline: get($settings, input outline);

    /* prevent ie10 issues with clickable inputs */
    padding: 0;

    label > &,
    > label {
      margin-#{script-direction()}: get($settings, input gap);
    }
  }

  /* button */
  button,
  [type="button"],
  [type="reset"],
  [type="submit"],
  summary {
    @include declare-map(map.get($settings, button));
  }

  /* ensure font inheritance for table elements */
  table,
  th,
  td {
    font: inherit;
  }

  /* caption */
  caption {
    @include declare-map(map.get($settings, caption));
  }

  /* table */
  table {
    @include declare-map(map.get($settings, table));
  }

  /* table cell */
  th,
  td {
    @include declare-map(map.get($settings, table-cell));

    /* table odd column */
    &:nth-child(2n+1) {
      @include declare-map(map.get($settings, table-odd-column));
    }

    /* table even column */
    &:nth-child(2n) {
      @include declare-map(map.get($settings, table-even-column));
    }
  }

  /* odd/even table rows */
  tr {
    /* table odd row */
    &:nth-child(2n + 1) td,
    &:nth-child(2n + 1) th {
      @include declare-map(map.get($settings, table-odd-row));
    }

    /* table even row */
    &:nth-child(2n) td,
    &:nth-child(2n) th {
      @include declare-map(map.get($settings, table-even-row));
    }
  }

  /* thead */
  thead {
    @include declare-map(map.get($settings, thead));
  }

  /* table head */
  th,
  thead td {
    @include declare-map(map.get($settings, table-head));
  }

  /* tfoot */
  tfoot {
    @include declare-map(map.get($settings, tfoot));
  }

  /* table foot */
  tfoot th,
  tfoot td {
    @include declare-map(map.get($settings, table-foot));
  }

  /* selection */
  ::-webkit-selection {
    @include declare-map(map.get($settings, selection));
  }

  ::-moz-selection {
    @include declare-map(map.get($settings, selection));
  }

  ::selection {
    @include declare-map(map.get($settings, selection));
  }

  input::-webkit-selection {
    @include declare-map(map.get($settings, selection));
  }

  input::-moz-selection {
    @include declare-map(map.get($settings, selection));
  }

  input::selection {
    @include declare-map(map.get($settings, selection));
  }

  textarea::-webkit-selection {
    @include declare-map(map.get($settings, selection));
  }

  textarea::-moz-selection {
    @include declare-map(map.get($settings, selection));
  }

  textarea::selection {
    @include declare-map(map.get($settings, selection));
  }

  /* apply spacing to common elements */
  @include spacing();
}