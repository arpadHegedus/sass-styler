@use "sass:map";
@use "../utility/declare-map" as *;
@use "../utility/get" as *;
@use "../utility/merge" as *;
@use "./elevation" as *;

/// Named card styles presets
/// @group helper

$card-styles: (
	normal: (
		padding: 1em,
		border: 1px solid rgba(0, 0, 0, 0.05)
		box-shadow: elevation(1),
		background: #fff,
	)
) !default;

/// Default card style from the presets
/// @group helper

$card-styles-default: normal !default;

/// Make an image behave like a background image
/// @param {Null|String} $preset [null] The card preset style
/// @param {Null|False|Number} $padding [false] Overwrite card padding
/// @param {Null|False|String} $border [false] Overwrite card border
/// @param {Null|False|String} $box-shadow [false] Overwrite box-shadow
/// @param {Null|False|String} $background [false] Overwrite background setting for the card
/// @group helper

@mixin card($preset: null, $padding: false, $border: false, $box-shadow: false, $background: false) {
	$preset: if($preset, $preset, $card-styles-default);
	$styles: if(map.has-key($card-styles, $preset), get($card-styles, $preset), null);
	@if $padding != false {
		$styles: if($styles, set($styles, padding, $padding), (padding: $padding));
	}
	@if $border != false {
		$styles: if($styles, set($styles, border, $border), (border: $border));
	}
	@if $box-shadow != false {
		$styles: if($styles, set($styles, box-shadow, $box-shadow), (box-shadow: $box-shadow));
	}
	@if $background != false {
		$styles: if($styles, set($styles, background, $background), (background: $background));
	}
	@include declare-map($styles);
	@content;
}
