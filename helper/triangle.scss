@use "sass:list";

/// Create a CSS-only triangle
/// @param {String} $direction [right] The triangle pointing direction
/// @param {Color} $color [#000] The triangle color
/// @param {Number|List} $size [0.5rem 0.75rem] The width and height or size of the triangle
/// @param {String|List} $selector ["&::after"] The triangle selector
/// @group helper

@mixin triangle($direction: right, $color: #000, $size: 0.5rem 0.75rem, $selector: "&::after") {
  $width: $size;
  $height: $size;

  @if list.length($size) > 1 {
    $width: list.nth($size, 1);
    $height: list.nth($size, 2);
  }

  #{$selector} {
    border-style: solid;
    width: 0;
    height: 0;

    @if $direction == "up" {
      border-color: transparent transparent $color;
      border-width: 0 ($width / 2) $height;
    }

    @else if $direction == "up-right" {
      border-color: transparent $color transparent transparent;
      border-width: 0 $width $width 0;
    }

    @else if $direction == "right" {
      border-color: transparent transparent transparent $color;
      border-width: ($height / 2) 0 ($height / 2) $width;
    }

    @else if $direction == "down-right" {
      border-color: transparent transparent $color;
      border-width: 0 0 $width $width;
    }

    @else if $direction == "down" {
      border-color: $color transparent transparent;
      border-width: $height ($width / 2) 0;
    }

    @else if $direction == "down-left" {
      border-color: transparent transparent transparent $color;
      border-width: $width 0 0 $width;
    }

    @else if $direction == "left" {
      border-color: transparent $color transparent transparent;
      border-width: ($height / 2) $width ($height / 2) 0;
    }

    @else if $direction == "up-left" {
      border-color: $color transparent transparent;
      border-width: $width $width 0 0;
    }
  }
}
