@use "sass:math";
@use "calc-add" as *;
@use "calc-substract" as *;

$_burger-height: null;
$_burger-gutter: null;

/// Generate a menu icon from a single element
/// @param {Number} $width [1em] Width of the menu icon lines
/// @param {Number} $height [0.125em] Height of an individual menu icon line
/// @param {Number} $gutter [0.3125em] Gutter between menu lines
/// @param {Color} $color [currentColor] Color of the menu lines
/// @param {Number} $border-radius [0] Menu line border radius
/// @param {Number} $transition-duration [0.3s] Transition speed for animations
/// @link https://github.com/jorenvanhee/sass-burger
/// @group Utility

@mixin menu-icon($width: 1em, $height: 0.125em, $gutter: 0.3125em, $color: currentColor, $border-radius: 0, $transition-duration: 0.3s) {
    $_burger-height: $height !global;
    $_burger-gutter: $gutter !global;

    position: relative;
    margin-top: calc-add($height, $gutter, math.unit($height));
    margin-bottom: calc-add($height, $gutter, math.unit($height));
    user-select: none;

    &,
    &::before,
    &::after {
        display: block;
        width: $width;
        height: $height;
        background-color: $color;
        outline: 1px solid transparent;
        border-radius: $border-radius;
        transition-property: background-color, transform;
        transition-duration: $transition-duration;
        @content;
    }

    &::before,
    &::after {
        position: absolute;
        content: "";
    }

    &::before {
        top: calc-substract(-1 * $height, $gutter, math.unit($height));
    }

    &::after {
        bottom: calc-substract(-1 * $height, $gutter, math.unit($height));
    }
}

/// Morph menu icon to a close (x) icon
/// @param {Color} $color [auto] Overwrite icon line color (use auto to keep existing color)
/// @group Utility

@mixin menu-icon-close($color: auto) {
    @if $_burger-height and $_burger-gutter {
        background-color: transparent;
        @if $color != auto {
            &::before,
            &::after {
                background-color: $color;
            }
        }

        &::before {
            transform: translateY(calc-add($_burger-gutter, $_burger-height, math.unit($_burger-height))) rotate(45deg)
        }

        &::after {
            transform: translateY(calc-substract(-1 * $_burger-gutter, $_burger-height, math.unit($_burger-height))) rotate(-45deg)
        }
    }
}
