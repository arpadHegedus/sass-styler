$component-placeholder-color-support-media: (dark) !default;
$component-placeholder-color-support-modifiers: (focus) !default;
$component-placeholder-color-use-palette: true !default;
@use "sass:color";
@use "sass:meta";
@use "sass:string";
@use "../theme/register-component" as *;
@use "../theme/color" as *;
@include register-component(
    "placeholder-transparent",
    (
        "&::placeholder": (
            color: transparent,
        ),
    ),
    $component-placeholder-color-support-media,
    $component-placeholder-color-support-modifiers
);
@include register-component(
    "placeholder-current",
    (
        "&::placeholder": (
            color: currentColor,
        ),
    ),
    $component-placeholder-color-support-media,
    $component-placeholder-color-support-modifiers
);
@each $key, $color in $palette {
    @if meta.type-of($color) != map {
        $color: (
            default: $color,
        );
    }
    @each $name, $value in $color {
        $alpha: if(
            string.index($value + "", "rgba"),
            color.alpha($value),
            var(--placeholder-opacity, 1)
        );
        $value: rgba(
            color.red($value),
            color.green($value),
            color.blue($value),
            $alpha
        );
        $name: if($name == default, $key, "#{$key}-#{$name}");
        @include register-component(
            "placeholder-#{$name}",
            (
                "&::placeholder": (
                    color: $value,
                ),
            ),
            $component-placeholder-color-support-media,
            $component-placeholder-color-support-modifiers
        );
    }
}
