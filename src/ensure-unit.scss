@use "sass:math";
@use "sass:meta";
@use "em-to-px" as *;
@use "em-to-rem" as *;
@use "rem-to-em" as *;
@use "rem-to-px" as *;
@use "px-to-em" as *;
@use "px-to-rem" as *;
@use "num-to-length" as *;
@use "strip-unit" as *;

/// Convert a number to another unit
/// @param {Number} $num - Size value
/// @param {String} $unit - The required unit
/// @param {Number} $default [null] - Set a default font size (fallback to global variable $font-size)
/// @return {Number}

@function ensure-unit($num, $unit: px, $default: null) {
    $num-unit: math.unit($num);
    @if $num-unit == $unit {
        @return $num;
    }
    $default: if(
        $default,
        $default,
        if(meta.global-variable-exists("font-size"), $font-size, 16px)
    );
    @if $num-unit == em and $unit == px {
        @return em-to-px($num, $default);
    }
    @if $num-unit == em and $unit == rem {
        @return em-to-rem($num);
    }
    @if $num-unit == rem and $unit == em {
        @return rem-to-em($num);
    }
    @if $num-unit == rem and $unit == px {
        @return rem-to-px($num, $default);
    }
    @if $num-unit == px and $unit == em {
        @return px-to-em($num, $default);
    }
    @if $num-unit == px and $unit == rem {
        @return px-to-rem($num, $default);
    }
    @return num-to-length(strip-unit($num), $unit);
}
