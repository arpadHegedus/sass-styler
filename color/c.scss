$palette: (
  black: #000,
  white: #fff
) !default;

@use "sass:color";
@use "sass:list";
@use "sass:map";
@use "sass:meta";
@use "best-contrast" as *;
@use "contrast-with" as *;
@use "set-hue" as *;
@use "set-lightness" as *;
@use "set-saturation" as *;
@use "shade" as *;
@use "strengthen" as *;
@use "tetrad" as *;
@use "tint" as *;
@use "triad" as *;
@use "weaken" as *;

@function c(
  $color,
  $strength: null,
  $shade: null,
  $tint: null,
  $triad: null,
  $tetrad: null,
  $complement: null,
  $hue: null,
  $saturation: null,
  $lightness: null,
  $best-contrast: null,
  $contrast-with: null
) {
  @if meta.type-of($color) == list {
    $list: ();
    $the-color: null;
    @each $item in $color {
      @if map.has-key($palette, $item) or meta.type-of($item) == color {
        $the-color: $item;
      }

      @else {
        $list: list.append($list, $item);
      }
    }

    @if not $the-color {
      @return $color;
    }

    $color: $the-color;

    @if list.index($list, complement-of) or list.index($list, complementary-of) {
      $complement: true;
    }

    @if list.index($list, triad-of) or list.index($list, second-triad-of) {
      $triad: if(list.index($list, second-triad), 2, 1);
    }

    @if list.index($list, tetrad-of) or list.index($list, second-tetrad-of) or list.index($list, third-tetrad-of) {
      $tetrad: if(list.index($list, third-tetrad-of), 3, if(list.index($list, second-tetrad-of), 2, 1));
    }

    @if list.index($list, contrast-of) {
      $best-contrast: #fff #000;
    }
  }

  $color: if(map.has-key($palette, $color), map.get($palette, $color), $color);

  @if $strength {
    @if $strength < 0 {
      $color: weaken($color, -1 * $strength);
    }

    @else {
      $color: strengthen($color, $strength);
    }
  }

  @if $triad {
    $color: triad($color, $triad);
  }

  @if $tetrad {
    $color: tetrad($color, $tetrad);
  }

  @if $complement {
    $color: color.complement($color);
  }

  @if $tint {
    $color: tint($color, $tint);
  }

  @if $shade {
    $color: shade($color, $shade);
  }

  @if $hue {
    $color: set-hue($color, $hue);
  }

  @if $saturation {
    $color: set-saturation($color, $saturation);
  }

  @if $lightness {
    $color: set-lightness($color, $lightness);
  }

  @if $best-contrast {
    $color: best-contrast($color, $best-contrast);
  }

  @if $contrast-with {
    $color: contrast-with($color, $contrast-with);
  }

  @return $color;
}
