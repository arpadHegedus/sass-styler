@use "sass:map";
@use "sass:meta";
@use "sass:string";
@use "./numtolength" as *;

$numbers: (
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 8,
    '9': 9
);

/// Cast a string `$value` into a number
/// @param {Number|String} $value The value to be cast
/// @return {Number}
/// @link https://www.sassmeister.com/gist/9fa19d254864f33d4a80
/// @group utility

@function strtonum($value) {
    @if meta.type-of($value) == number {
        @return $value;
    }
    $result: 0;
    $digits: 0;
    $minus: string.slice($value, 1, 1) == "-";    
    @for $i from if($minus, 2, 1) through string.length($value) {
        $character: string.slice($value, $i, $i);
        @if not (map.has-key($numbers, $character) or $character == ".") {
            @return numtolength(if($minus, -$result, $result), string.slice($value, $i));
        }
        @if $character == "." {
            $digits: 1;
        }
        @else if $digits == 0 {
            $result: $result * 10 + map.get($numbers, $character);
        }
        @else {
            $digits: $digits * 10;
            $result: $result + map.get($numbers, $character) / $digits;
        }
    }
    @return if($minus, -$result, $result);
}
